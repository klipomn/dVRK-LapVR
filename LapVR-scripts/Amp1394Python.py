# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _Amp1394Python
else:
    import _Amp1394Python

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)



def bswap16(_in):
    return _Amp1394Python.bswap16(_in)

def bswap32(_in):
    return _Amp1394Python.bswap32(_in)
VERSION_MAJOR = _Amp1394Python.VERSION_MAJOR
VERSION_MINOR = _Amp1394Python.VERSION_MINOR
VERSION_PATCH = _Amp1394Python.VERSION_PATCH

_Amp1394Python.VERSION_swigconstant(_Amp1394Python)
VERSION = _Amp1394Python.VERSION

def Amp1394_GetTime():
    return _Amp1394Python.Amp1394_GetTime()

def Amp1394_Sleep(sec):
    return _Amp1394Python.Amp1394_Sleep(sec)
class EncoderVelocity(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _Amp1394Python.EncoderVelocity_swiginit(self, _Amp1394Python.new_EncoderVelocity())
    __swig_destroy__ = _Amp1394Python.delete_EncoderVelocity

    def Init(self):
        return _Amp1394Python.EncoderVelocity_Init(self)

    def SetData(self, rawPeriod, rawQtr1, rawQtr5, rawRun, isESPM=False):
        return _Amp1394Python.EncoderVelocity_SetData(self, rawPeriod, rawQtr1, rawQtr5, rawRun, isESPM)

    def SetDataRev6(self, rawPeriod, rawQtr):
        return _Amp1394Python.EncoderVelocity_SetDataRev6(self, rawPeriod, rawQtr)

    def SetDataOld(self, rawPeriod, useRunCounter):
        return _Amp1394Python.EncoderVelocity_SetDataOld(self, rawPeriod, useRunCounter)

    def GetEncoderVelocity(self):
        return _Amp1394Python.EncoderVelocity_GetEncoderVelocity(self)

    def GetEncoderVelocityPredicted(self, percent_threshold=1.0):
        return _Amp1394Python.EncoderVelocity_GetEncoderVelocityPredicted(self, percent_threshold)

    def GetEncoderAcceleration(self, percent_threshold=1.0):
        return _Amp1394Python.EncoderVelocity_GetEncoderAcceleration(self, percent_threshold)

    def GetEncoderRunningCounterSeconds(self):
        return _Amp1394Python.EncoderVelocity_GetEncoderRunningCounterSeconds(self)

    def IsEncoderError(self):
        return _Amp1394Python.EncoderVelocity_IsEncoderError(self)

    def GetEncoderVelocityPeriod(self):
        return _Amp1394Python.EncoderVelocity_GetEncoderVelocityPeriod(self)

    def GetEncoderQuarter1Period(self):
        return _Amp1394Python.EncoderVelocity_GetEncoderQuarter1Period(self)

    def GetEncoderQuarter5Period(self):
        return _Amp1394Python.EncoderVelocity_GetEncoderQuarter5Period(self)

    def IsRunningCounterOverflow(self):
        return _Amp1394Python.EncoderVelocity_IsRunningCounterOverflow(self)
    A_UP = _Amp1394Python.EncoderVelocity_A_UP
    B_UP = _Amp1394Python.EncoderVelocity_B_UP
    A_DN = _Amp1394Python.EncoderVelocity_A_DN
    B_DN = _Amp1394Python.EncoderVelocity_B_DN

    def GetEncoderQuarter1Edges(self):
        return _Amp1394Python.EncoderVelocity_GetEncoderQuarter1Edges(self)

    def GetEncoderQuarter5Edges(self):
        return _Amp1394Python.EncoderVelocity_GetEncoderQuarter5Edges(self)

    def GetEncoderDirChange(self):
        return _Amp1394Python.EncoderVelocity_GetEncoderDirChange(self)

# Register EncoderVelocity in _Amp1394Python:
_Amp1394Python.EncoderVelocity_swigregister(EncoderVelocity)

class BoardIO(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    MAX_BOARDS = _Amp1394Python.BoardIO_MAX_BOARDS
    BOARD_STATUS = _Amp1394Python.BoardIO_BOARD_STATUS
    FW_PHY_REQ = _Amp1394Python.BoardIO_FW_PHY_REQ
    FW_PHY_RESP = _Amp1394Python.BoardIO_FW_PHY_RESP
    HARDWARE_VERSION = _Amp1394Python.BoardIO_HARDWARE_VERSION
    FIRMWARE_VERSION = _Amp1394Python.BoardIO_FIRMWARE_VERSION
    IP_ADDR = _Amp1394Python.BoardIO_IP_ADDR
    ETH_STATUS = _Amp1394Python.BoardIO_ETH_STATUS
    GIT_DESC = _Amp1394Python.BoardIO_GIT_DESC
    __swig_destroy__ = _Amp1394Python.delete_BoardIO

    def GetBoardId(self):
        return _Amp1394Python.BoardIO_GetBoardId(self)

    def IsValid(self):
        return _Amp1394Python.BoardIO_IsValid(self)

    def ValidRead(self):
        return _Amp1394Python.BoardIO_ValidRead(self)

    def ValidWrite(self):
        return _Amp1394Python.BoardIO_ValidWrite(self)

    def GetReadErrors(self):
        return _Amp1394Python.BoardIO_GetReadErrors(self)

    def GetWriteErrors(self):
        return _Amp1394Python.BoardIO_GetWriteErrors(self)

    def ClearReadErrors(self):
        return _Amp1394Python.BoardIO_ClearReadErrors(self)

    def ClearWriteErrors(self):
        return _Amp1394Python.BoardIO_ClearWriteErrors(self)

    def GetFirmwareVersion(self):
        return _Amp1394Python.BoardIO_GetFirmwareVersion(self)

    def GetFpgaVersionMajor(self):
        return _Amp1394Python.BoardIO_GetFpgaVersionMajor(self)

    @staticmethod
    def GetFpgaVersionMajorFromStatus(status):
        return _Amp1394Python.BoardIO_GetFpgaVersionMajorFromStatus(status)

    def GetHardwareVersion(self):
        return _Amp1394Python.BoardIO_GetHardwareVersion(self)

    def GetHardwareVersionString(self):
        return _Amp1394Python.BoardIO_GetHardwareVersionString(self)

    def GetFPGAClockPeriod(self):
        return _Amp1394Python.BoardIO_GetFPGAClockPeriod(self)

    def ReadStatus(self):
        return _Amp1394Python.BoardIO_ReadStatus(self)

    def ReadIPv4Address(self):
        return _Amp1394Python.BoardIO_ReadIPv4Address(self)

    def WriteIPv4Address(self, IPaddr):
        return _Amp1394Python.BoardIO_WriteIPv4Address(self, IPaddr)

# Register BoardIO in _Amp1394Python:
_Amp1394Python.BoardIO_swigregister(BoardIO)

def BoardIO_GetFpgaVersionMajorFromStatus(status):
    return _Amp1394Python.BoardIO_GetFpgaVersionMajorFromStatus(status)

class FpgaIO(BoardIO):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _Amp1394Python.delete_FpgaIO

    def GetFPGASerialNumber(self):
        return _Amp1394Python.FpgaIO_GetFPGASerialNumber(self)

    def GetFPGAClockPeriod(self):
        return _Amp1394Python.FpgaIO_GetFPGAClockPeriod(self)

    def HasEthernet(self):
        return _Amp1394Python.FpgaIO_HasEthernet(self)

    def GetFirmwareTime(self):
        return _Amp1394Python.FpgaIO_GetFirmwareTime(self)

    def SetFirmwareTime(self, newTime=0.0):
        return _Amp1394Python.FpgaIO_SetFirmwareTime(self, newTime)

    def WriteReboot(self):
        return _Amp1394Python.FpgaIO_WriteReboot(self)

    def WriteLED(self, status):
        return _Amp1394Python.FpgaIO_WriteLED(self, status)

    @staticmethod
    def WriteRebootAll(port):
        return _Amp1394Python.FpgaIO_WriteRebootAll(port)

    @staticmethod
    def ResetEthernetAll(port):
        return _Amp1394Python.FpgaIO_ResetEthernetAll(port)
    PROM_M25P16 = _Amp1394Python.FpgaIO_PROM_M25P16
    PROM_25AA128 = _Amp1394Python.FpgaIO_PROM_25AA128
    PROM_25AA128_1 = _Amp1394Python.FpgaIO_PROM_25AA128_1
    PROM_25AA128_2 = _Amp1394Python.FpgaIO_PROM_25AA128_2

    def GetPromAddress(self, *args):
        return _Amp1394Python.FpgaIO_GetPromAddress(self, *args)

    def PromGetId(self):
        return _Amp1394Python.FpgaIO_PromGetId(self)
    MASK_WIP = _Amp1394Python.FpgaIO_MASK_WIP
    MASK_WEL = _Amp1394Python.FpgaIO_MASK_WEL

    def PromGetStatus(self, *args):
        return _Amp1394Python.FpgaIO_PromGetStatus(self, *args)

    def PromGetResult(self, *args):
        return _Amp1394Python.FpgaIO_PromGetResult(self, *args)

    def PromReadData(self, addr, data, nbytes):
        return _Amp1394Python.FpgaIO_PromReadData(self, addr, data, nbytes)

    def PromWriteEnable(self, *args):
        return _Amp1394Python.FpgaIO_PromWriteEnable(self, *args)

    def PromWriteDisable(self, *args):
        return _Amp1394Python.FpgaIO_PromWriteDisable(self, *args)

    def PromSectorErase(self, addr, cb=None):
        return _Amp1394Python.FpgaIO_PromSectorErase(self, addr, cb)

    def PromProgramPage(self, addr, bytes, nbytes, cb=None):
        return _Amp1394Python.FpgaIO_PromProgramPage(self, addr, bytes, nbytes, cb)

    def PromReadByte25AA128(self, addr, data, chan=0):
        return _Amp1394Python.FpgaIO_PromReadByte25AA128(self, addr, data, chan)

    def PromWriteByte25AA128(self, addr, data, chan=0):
        return _Amp1394Python.FpgaIO_PromWriteByte25AA128(self, addr, data, chan)

    def PromReadBlock25AA128(self, addr, data, nquads, chan=0):
        return _Amp1394Python.FpgaIO_PromReadBlock25AA128(self, addr, data, nquads, chan)

    def PromWriteBlock25AA128(self, addr, data, nquads, chan=0):
        return _Amp1394Python.FpgaIO_PromWriteBlock25AA128(self, addr, data, nquads, chan)

    def WriteKSZ8851Reg(self, addr, data):
        return _Amp1394Python.FpgaIO_WriteKSZ8851Reg(self, addr, data)

    def ReadKSZ8851Reg(self, addr):
        return _Amp1394Python.FpgaIO_ReadKSZ8851Reg(self, addr)

    def WriteKSZ8851DMA(self, data):
        return _Amp1394Python.FpgaIO_WriteKSZ8851DMA(self, data)

    def ReadKSZ8851DMA(self):
        return _Amp1394Python.FpgaIO_ReadKSZ8851DMA(self)

    def ReadKSZ8851ChipID(self):
        return _Amp1394Python.FpgaIO_ReadKSZ8851ChipID(self)

    def ReadKSZ8851Status(self):
        return _Amp1394Python.FpgaIO_ReadKSZ8851Status(self)
    RTL8211F_PAGE_IEEE = _Amp1394Python.FpgaIO_RTL8211F_PAGE_IEEE
    RTL8211F_PAGE_DEFAULT = _Amp1394Python.FpgaIO_RTL8211F_PAGE_DEFAULT
    RTL8211F_PAGE_LED = _Amp1394Python.FpgaIO_RTL8211F_PAGE_LED
    RTL8211F_BMCR = _Amp1394Python.FpgaIO_RTL8211F_BMCR
    RTL8211F_BMSR = _Amp1394Python.FpgaIO_RTL8211F_BMSR
    RTL8211F_PHYID1 = _Amp1394Python.FpgaIO_RTL8211F_PHYID1
    RTL8211F_PHYID2 = _Amp1394Python.FpgaIO_RTL8211F_PHYID2
    RTL8211F_INER = _Amp1394Python.FpgaIO_RTL8211F_INER
    RTL8211F_PHYSR = _Amp1394Python.FpgaIO_RTL8211F_PHYSR
    RTL8211F_INSR = _Amp1394Python.FpgaIO_RTL8211F_INSR
    RTL8211F_PAGSR = _Amp1394Python.FpgaIO_RTL8211F_PAGSR
    PHY_BROADCAST = _Amp1394Python.FpgaIO_PHY_BROADCAST
    PHY_RTL8211F = _Amp1394Python.FpgaIO_PHY_RTL8211F
    PHY_GMII_CORE = _Amp1394Python.FpgaIO_PHY_GMII_CORE

    def ReadRTL8211F_Register(self, chan, phyAddr, regAddr, data):
        return _Amp1394Python.FpgaIO_ReadRTL8211F_Register(self, chan, phyAddr, regAddr, data)

    def WriteRTL8211F_Register(self, chan, phyAddr, regAddr, data):
        return _Amp1394Python.FpgaIO_WriteRTL8211F_Register(self, chan, phyAddr, regAddr, data)
    ETH_STAT_PRESENT_V2 = _Amp1394Python.FpgaIO_ETH_STAT_PRESENT_V2
    ETH_STAT_REQ_ERR_V2 = _Amp1394Python.FpgaIO_ETH_STAT_REQ_ERR_V2
    ETH_STAT_INIT_OK_V2 = _Amp1394Python.FpgaIO_ETH_STAT_INIT_OK_V2
    ETH_STAT_FRAME_ERR = _Amp1394Python.FpgaIO_ETH_STAT_FRAME_ERR
    ETH_STAT_IPV4_ERR = _Amp1394Python.FpgaIO_ETH_STAT_IPV4_ERR
    ETH_STAT_UDP_ERR = _Amp1394Python.FpgaIO_ETH_STAT_UDP_ERR
    ETH_STAT_DEST_ERR = _Amp1394Python.FpgaIO_ETH_STAT_DEST_ERR
    ETH_STAT_ACCESS_ERR = _Amp1394Python.FpgaIO_ETH_STAT_ACCESS_ERR
    ETH_STAT_STATE_ERR_V2 = _Amp1394Python.FpgaIO_ETH_STAT_STATE_ERR_V2
    ETH_STAT_CLK125_OK_V3 = _Amp1394Python.FpgaIO_ETH_STAT_CLK125_OK_V3
    ETH_STAT_ETHST_ERR = _Amp1394Python.FpgaIO_ETH_STAT_ETHST_ERR
    ETH_STAT_CLK200_OK_V3 = _Amp1394Python.FpgaIO_ETH_STAT_CLK200_OK_V3
    ETH_STAT_UDP = _Amp1394Python.FpgaIO_ETH_STAT_UDP
    ETH_STAT_LINK_STAT_V2 = _Amp1394Python.FpgaIO_ETH_STAT_LINK_STAT_V2
    ETH_STAT_IDLE_V2 = _Amp1394Python.FpgaIO_ETH_STAT_IDLE_V2
    ETH_STAT_WAIT_MASK_V2 = _Amp1394Python.FpgaIO_ETH_STAT_WAIT_MASK_V2
    ETH_STAT_PSETH_EN_V3 = _Amp1394Python.FpgaIO_ETH_STAT_PSETH_EN_V3
    ETH_STAT_DATA_MASK_V2 = _Amp1394Python.FpgaIO_ETH_STAT_DATA_MASK_V2
    ETH_STAT_PORT2_MASK_V3 = _Amp1394Python.FpgaIO_ETH_STAT_PORT2_MASK_V3
    ETH_STAT_PORT1_MASK_V3 = _Amp1394Python.FpgaIO_ETH_STAT_PORT1_MASK_V3

    def ReadEthernetStatus(self, status):
        return _Amp1394Python.FpgaIO_ReadEthernetStatus(self, status)
    ETH_PORT_STAT_INIT_OK = _Amp1394Python.FpgaIO_ETH_PORT_STAT_INIT_OK
    ETH_PORT_STAT_HAS_IRQ = _Amp1394Python.FpgaIO_ETH_PORT_STAT_HAS_IRQ
    ETH_PORT_STAT_LINK_STAT = _Amp1394Python.FpgaIO_ETH_PORT_STAT_LINK_STAT
    ETH_PORT_STAT_SPEED_MASK = _Amp1394Python.FpgaIO_ETH_PORT_STAT_SPEED_MASK
    ETH_PORT_STAT_RECV_ERR = _Amp1394Python.FpgaIO_ETH_PORT_STAT_RECV_ERR
    ETH_PORT_STAT_SEND_OVF = _Amp1394Python.FpgaIO_ETH_PORT_STAT_SEND_OVF
    ETH_PORT_STAT_PS_ETH = _Amp1394Python.FpgaIO_ETH_PORT_STAT_PS_ETH

    @staticmethod
    def GetEthernetPortStatusV3(status, chan):
        return _Amp1394Python.FpgaIO_GetEthernetPortStatusV3(status, chan)
    ETH_CTRL_CLR_ERR_SW_V3 = _Amp1394Python.FpgaIO_ETH_CTRL_CLR_ERR_SW_V3
    ETH_CTRL_CLR_ERR_NET = _Amp1394Python.FpgaIO_ETH_CTRL_CLR_ERR_NET
    ETH_CTRL_CLR_ERR_LINK_V2 = _Amp1394Python.FpgaIO_ETH_CTRL_CLR_ERR_LINK_V2
    ETH_CTRL_IRQ_GEN_V3 = _Amp1394Python.FpgaIO_ETH_CTRL_IRQ_GEN_V3
    ETH_CTRL_DMA_V2 = _Amp1394Python.FpgaIO_ETH_CTRL_DMA_V2
    ETH_CTRL_IRQ_DIS_V3 = _Amp1394Python.FpgaIO_ETH_CTRL_IRQ_DIS_V3
    ETH_CTRL_RESET_PHY = _Amp1394Python.FpgaIO_ETH_CTRL_RESET_PHY
    ETH_CTRL_WR_V2 = _Amp1394Python.FpgaIO_ETH_CTRL_WR_V2
    ETH_CTRL_EN_PS_ETH_V3 = _Amp1394Python.FpgaIO_ETH_CTRL_EN_PS_ETH_V3
    ETH_CTRL_WB_V2 = _Amp1394Python.FpgaIO_ETH_CTRL_WB_V2
    ETH_CTRL_ADDR_MASK_V2 = _Amp1394Python.FpgaIO_ETH_CTRL_ADDR_MASK_V2
    ETH_CTRL_PS_ETH_V3 = _Amp1394Python.FpgaIO_ETH_CTRL_PS_ETH_V3
    ETH_CTRL_DATA_MASK_V2 = _Amp1394Python.FpgaIO_ETH_CTRL_DATA_MASK_V2
    ETH_PORT_CTRL_RESET_PHY = _Amp1394Python.FpgaIO_ETH_PORT_CTRL_RESET_PHY
    ETH_PORT_CTRL_IRQ_DIS = _Amp1394Python.FpgaIO_ETH_PORT_CTRL_IRQ_DIS
    ETH_PORT_CTRL_IRQ_GEN = _Amp1394Python.FpgaIO_ETH_PORT_CTRL_IRQ_GEN

    def WriteEthernetControl(self, write_data):
        return _Amp1394Python.FpgaIO_WriteEthernetControl(self, write_data)

    def WriteEthernetPhyReset(self, chan=0):
        return _Amp1394Python.FpgaIO_WriteEthernetPhyReset(self, chan)

    def WriteEthernetClearErrors(self):
        return _Amp1394Python.FpgaIO_WriteEthernetClearErrors(self)

    def ReadEthernetData(self, buffer, offset, nquads):
        return _Amp1394Python.FpgaIO_ReadEthernetData(self, buffer, offset, nquads)

    def ReadFirewireData(self, buffer, offset, nquads):
        return _Amp1394Python.FpgaIO_ReadFirewireData(self, buffer, offset, nquads)

# Register FpgaIO in _Amp1394Python:
_Amp1394Python.FpgaIO_swigregister(FpgaIO)

def FpgaIO_WriteRebootAll(port):
    return _Amp1394Python.FpgaIO_WriteRebootAll(port)

def FpgaIO_ResetEthernetAll(port):
    return _Amp1394Python.FpgaIO_ResetEthernetAll(port)

def FpgaIO_GetEthernetPortStatusV3(status, chan):
    return _Amp1394Python.FpgaIO_GetEthernetPortStatusV3(status, chan)

class SiCurrentLoopParams(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    kp = property(_Amp1394Python.SiCurrentLoopParams_kp_get, _Amp1394Python.SiCurrentLoopParams_kp_set)
    ki = property(_Amp1394Python.SiCurrentLoopParams_ki_get, _Amp1394Python.SiCurrentLoopParams_ki_set)
    kd = property(_Amp1394Python.SiCurrentLoopParams_kd_get, _Amp1394Python.SiCurrentLoopParams_kd_set)
    ff_resistive = property(_Amp1394Python.SiCurrentLoopParams_ff_resistive_get, _Amp1394Python.SiCurrentLoopParams_ff_resistive_set)
    iTermLimit = property(_Amp1394Python.SiCurrentLoopParams_iTermLimit_get, _Amp1394Python.SiCurrentLoopParams_iTermLimit_set)
    dutyCycleLimit = property(_Amp1394Python.SiCurrentLoopParams_dutyCycleLimit_get, _Amp1394Python.SiCurrentLoopParams_dutyCycleLimit_set)

    def __init__(self):
        _Amp1394Python.SiCurrentLoopParams_swiginit(self, _Amp1394Python.new_SiCurrentLoopParams())
    __swig_destroy__ = _Amp1394Python.delete_SiCurrentLoopParams

# Register SiCurrentLoopParams in _Amp1394Python:
_Amp1394Python.SiCurrentLoopParams_swigregister(SiCurrentLoopParams)

class AmpIO(FpgaIO):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, board_id):
        _Amp1394Python.AmpIO_swiginit(self, _Amp1394Python.new_AmpIO(board_id))
    __swig_destroy__ = _Amp1394Python.delete_AmpIO

    def GetNumMotors(self):
        return _Amp1394Python.AmpIO_GetNumMotors(self)

    def GetNumEncoders(self):
        return _Amp1394Python.AmpIO_GetNumEncoders(self)

    def GetNumDouts(self):
        return _Amp1394Python.AmpIO_GetNumDouts(self)

    def GetQLASerialNumber(self, chan=0):
        return _Amp1394Python.AmpIO_GetQLASerialNumber(self, chan)

    def DisplayReadBuffer(self, *args):
        return _Amp1394Python.AmpIO_DisplayReadBuffer(self, *args)

    def HasQLA(self):
        return _Amp1394Python.AmpIO_HasQLA(self)

    def GetStatus(self):
        return _Amp1394Python.AmpIO_GetStatus(self)

    def GetTimestamp(self):
        return _Amp1394Python.AmpIO_GetTimestamp(self)

    def GetTimestampSeconds(self):
        return _Amp1394Python.AmpIO_GetTimestampSeconds(self)

    def GetDigitalOutput(self):
        return _Amp1394Python.AmpIO_GetDigitalOutput(self)

    def GetNegativeLimitSwitches(self):
        return _Amp1394Python.AmpIO_GetNegativeLimitSwitches(self)

    def GetPositiveLimitSwitches(self):
        return _Amp1394Python.AmpIO_GetPositiveLimitSwitches(self)

    def GetHomeSwitches(self):
        return _Amp1394Python.AmpIO_GetHomeSwitches(self)

    def GetEncoderChannelA(self, *args):
        return _Amp1394Python.AmpIO_GetEncoderChannelA(self, *args)

    def GetEncoderChannelB(self, *args):
        return _Amp1394Python.AmpIO_GetEncoderChannelB(self, *args)

    def GetEncoderIndex(self):
        return _Amp1394Python.AmpIO_GetEncoderIndex(self)

    def GetDigitalInput(self):
        return _Amp1394Python.AmpIO_GetDigitalInput(self)

    def GetAmpTemperature(self, index):
        return _Amp1394Python.AmpIO_GetAmpTemperature(self, index)

    def GetMotorCurrent(self, *args):
        return _Amp1394Python.AmpIO_GetMotorCurrent(self, *args)

    def GetMotorStatus(self, index):
        return _Amp1394Python.AmpIO_GetMotorStatus(self, index)

    def GetMotorVoltageRatio(self, index):
        return _Amp1394Python.AmpIO_GetMotorVoltageRatio(self, index)

    def GetAnalogInput(self, index):
        return _Amp1394Python.AmpIO_GetAnalogInput(self, index)

    def GetEncoderPosition(self, index):
        return _Amp1394Python.AmpIO_GetEncoderPosition(self, index)

    def GetEncoderOverflow(self, index):
        return _Amp1394Python.AmpIO_GetEncoderOverflow(self, index)

    def GetEncoderClockPeriod(self):
        return _Amp1394Python.AmpIO_GetEncoderClockPeriod(self)

    def GetEncoderVelocity(self, index):
        return _Amp1394Python.AmpIO_GetEncoderVelocity(self, index)

    def GetEncoderVelocityPredicted(self, index, percent_threshold=1.0):
        return _Amp1394Python.AmpIO_GetEncoderVelocityPredicted(self, index, percent_threshold)

    def GetEncoderVelocityRaw(self, index):
        return _Amp1394Python.AmpIO_GetEncoderVelocityRaw(self, index)

    @staticmethod
    def GetEncoderMidRange():
        return _Amp1394Python.AmpIO_GetEncoderMidRange()

    def GetEncoderAcceleration(self, index, percent_threshold=1.0):
        return _Amp1394Python.AmpIO_GetEncoderAcceleration(self, index, percent_threshold)

    def GetEncoderAccelerationRaw(self, index):
        return _Amp1394Python.AmpIO_GetEncoderAccelerationRaw(self, index)

    def GetEncoderQtr1Raw(self, index):
        return _Amp1394Python.AmpIO_GetEncoderQtr1Raw(self, index)

    def GetEncoderQtr5Raw(self, index):
        return _Amp1394Python.AmpIO_GetEncoderQtr5Raw(self, index)

    def GetEncoderRunningCounterRaw(self, index):
        return _Amp1394Python.AmpIO_GetEncoderRunningCounterRaw(self, index)

    def GetEncoderRunningCounterSeconds(self, index):
        return _Amp1394Python.AmpIO_GetEncoderRunningCounterSeconds(self, index)

    def GetEncoderVelocityData(self, index, data):
        return _Amp1394Python.AmpIO_GetEncoderVelocityData(self, index, data)

    def GetEncoderErrorCount(self, index):
        return _Amp1394Python.AmpIO_GetEncoderErrorCount(self, index)

    def ClearEncoderErrorCount(self, *args):
        return _Amp1394Python.AmpIO_ClearEncoderErrorCount(self, *args)

    def GetPowerEnable(self):
        return _Amp1394Python.AmpIO_GetPowerEnable(self)

    def GetPowerStatus(self, index=0):
        return _Amp1394Python.AmpIO_GetPowerStatus(self, index)

    def GetPowerFault(self):
        return _Amp1394Python.AmpIO_GetPowerFault(self)

    def GetSafetyRelay(self):
        return _Amp1394Python.AmpIO_GetSafetyRelay(self)

    def GetSafetyRelayStatus(self):
        return _Amp1394Python.AmpIO_GetSafetyRelayStatus(self)

    def GetWatchdogTimeoutStatus(self):
        return _Amp1394Python.AmpIO_GetWatchdogTimeoutStatus(self)

    def GetAmpEnable(self, index):
        return _Amp1394Python.AmpIO_GetAmpEnable(self, index)

    def GetAmpEnableMask(self):
        return _Amp1394Python.AmpIO_GetAmpEnableMask(self)

    def GetAmpStatus(self, index):
        return _Amp1394Python.AmpIO_GetAmpStatus(self, index)

    def GetSafetyAmpDisable(self, *args):
        return _Amp1394Python.AmpIO_GetSafetyAmpDisable(self, *args)

    def GetAmpFaultCode(self, index):
        return _Amp1394Python.AmpIO_GetAmpFaultCode(self, index)

    def IsQLAExpanded(self, index=0):
        return _Amp1394Python.AmpIO_IsQLAExpanded(self, index)

    def SetPowerEnable(self, state):
        return _Amp1394Python.AmpIO_SetPowerEnable(self, state)

    def SetAmpEnable(self, index, state):
        return _Amp1394Python.AmpIO_SetAmpEnable(self, index, state)

    def SetAmpEnableMask(self, mask, state):
        return _Amp1394Python.AmpIO_SetAmpEnableMask(self, mask, state)

    def SetSafetyRelay(self, state):
        return _Amp1394Python.AmpIO_SetSafetyRelay(self, state)

    def SetMotorCurrent(self, index, mcur):
        return _Amp1394Python.AmpIO_SetMotorCurrent(self, index, mcur)

    def SetMotorVoltage(self, *args):
        return _Amp1394Python.AmpIO_SetMotorVoltage(self, *args)

    def SetMotorVoltageRatio(self, index, ratio):
        return _Amp1394Python.AmpIO_SetMotorVoltageRatio(self, index, ratio)

    def ReadPowerStatus(self, index=0):
        return _Amp1394Python.AmpIO_ReadPowerStatus(self, index)

    def ReadSafetyRelayStatus(self):
        return _Amp1394Python.AmpIO_ReadSafetyRelayStatus(self)

    def ReadSafetyAmpDisable(self):
        return _Amp1394Python.AmpIO_ReadSafetyAmpDisable(self)

    def ReadEncoderPreload(self, index):
        return _Amp1394Python.AmpIO_ReadEncoderPreload(self, index)

    def IsEncoderPreloadMidrange(self, index, isMidrange):
        return _Amp1394Python.AmpIO_IsEncoderPreloadMidrange(self, index, isMidrange)

    def ReadWatchdogPeriod(self, applyMask=True):
        return _Amp1394Python.AmpIO_ReadWatchdogPeriod(self, applyMask)

    def ReadWatchdogPeriodInSeconds(self):
        return _Amp1394Python.AmpIO_ReadWatchdogPeriodInSeconds(self)

    def ReadDigitalIO(self):
        return _Amp1394Python.AmpIO_ReadDigitalIO(self)

    def ReadDoutControl(self, index):
        return _Amp1394Python.AmpIO_ReadDoutControl(self, index)

    def ReadWaveformStatus(self, active, tableIndex):
        return _Amp1394Python.AmpIO_ReadWaveformStatus(self, active, tableIndex)

    def ReadIOExpander(self, resp):
        return _Amp1394Python.AmpIO_ReadIOExpander(self, resp)

    def ReadMotorSupplyVoltageBit(self, index=0):
        return _Amp1394Python.AmpIO_ReadMotorSupplyVoltageBit(self, index)
    MCFG_VOLTAGE_CONTROL = _Amp1394Python.AmpIO_MCFG_VOLTAGE_CONTROL
    MCFG_CURRENT_CONTROL = _Amp1394Python.AmpIO_MCFG_CURRENT_CONTROL
    MCFG_SET_AMP_DELAY = _Amp1394Python.AmpIO_MCFG_SET_AMP_DELAY
    MCFG_SET_CUR_LIMIT = _Amp1394Python.AmpIO_MCFG_SET_CUR_LIMIT
    MCFG_AMP_ENABLE_DELAY_MASK = _Amp1394Python.AmpIO_MCFG_AMP_ENABLE_DELAY_MASK
    MCFG_CURRENT_LIMIT_MASK = _Amp1394Python.AmpIO_MCFG_CURRENT_LIMIT_MASK

    def ReadMotorConfig(self, index, cfg):
        return _Amp1394Python.AmpIO_ReadMotorConfig(self, index, cfg)

    def ReadMotorCurrentLimit(self, index, mcurlim):
        return _Amp1394Python.AmpIO_ReadMotorCurrentLimit(self, index, mcurlim)

    def ReadAmpEnableDelay(self, index, ampdelay):
        return _Amp1394Python.AmpIO_ReadAmpEnableDelay(self, index, ampdelay)

    def WritePowerEnable(self, state):
        return _Amp1394Python.AmpIO_WritePowerEnable(self, state)

    def WriteAmpEnable(self, mask, state):
        return _Amp1394Python.AmpIO_WriteAmpEnable(self, mask, state)

    def WriteAmpEnableAxis(self, index, state):
        return _Amp1394Python.AmpIO_WriteAmpEnableAxis(self, index, state)

    def WriteSafetyRelay(self, state):
        return _Amp1394Python.AmpIO_WriteSafetyRelay(self, state)

    def WriteEncoderPreload(self, index, enc):
        return _Amp1394Python.AmpIO_WriteEncoderPreload(self, index, enc)

    def WriteDoutConfigReset(self):
        return _Amp1394Python.AmpIO_WriteDoutConfigReset(self)

    def WriteDigitalOutput(self, mask, bits):
        return _Amp1394Python.AmpIO_WriteDigitalOutput(self, mask, bits)

    def WriteWaveformControl(self, mask, bits):
        return _Amp1394Python.AmpIO_WriteWaveformControl(self, mask, bits)

    def WriteWatchdogPeriod(self, counts):
        return _Amp1394Python.AmpIO_WriteWatchdogPeriod(self, counts)

    def WriteWatchdogPeriodInSeconds(self, seconds, ledDisplay=False):
        return _Amp1394Python.AmpIO_WriteWatchdogPeriodInSeconds(self, seconds, ledDisplay)

    def WriteDoutControl(self, index, countsHigh, countsLow):
        return _Amp1394Python.AmpIO_WriteDoutControl(self, index, countsHigh, countsLow)

    def WritePWM(self, index, freq, duty):
        return _Amp1394Python.AmpIO_WritePWM(self, index, freq, duty)

    def GetDoutCounts(self, timeInSec):
        return _Amp1394Python.AmpIO_GetDoutCounts(self, timeInSec)

    def WriteIOExpander(self, cmd):
        return _Amp1394Python.AmpIO_WriteIOExpander(self, cmd)

    def WriteMotorConfig(self, index, cfg):
        return _Amp1394Python.AmpIO_WriteMotorConfig(self, index, cfg)

    def WriteMotorCurrentLimit(self, index, mcurlim):
        return _Amp1394Python.AmpIO_WriteMotorCurrentLimit(self, index, mcurlim)

    def WriteAmpEnableDelay(self, index, ampdelay):
        return _Amp1394Python.AmpIO_WriteAmpEnableDelay(self, index, ampdelay)

    @staticmethod
    def WritePowerEnableAll(port, state):
        return _Amp1394Python.AmpIO_WritePowerEnableAll(port, state)

    @staticmethod
    def WriteSafetyRelayAll(port, state):
        return _Amp1394Python.AmpIO_WriteSafetyRelayAll(port, state)

    @staticmethod
    def WriteEncoderPreloadAll(port, sdata):
        return _Amp1394Python.AmpIO_WriteEncoderPreloadAll(port, sdata)
    DALLAS_NONE = _Amp1394Python.AmpIO_DALLAS_NONE
    DALLAS_IO_ERROR = _Amp1394Python.AmpIO_DALLAS_IO_ERROR
    DALLAS_TIMEOUT = _Amp1394Python.AmpIO_DALLAS_TIMEOUT
    DALLAS_DATA_ERROR = _Amp1394Python.AmpIO_DALLAS_DATA_ERROR
    DALLAS_WAIT = _Amp1394Python.AmpIO_DALLAS_WAIT
    DALLAS_OK = _Amp1394Python.AmpIO_DALLAS_OK

    def DallasReadTool(self, model, version, name, timeoutSec=10.0):
        return _Amp1394Python.AmpIO_DallasReadTool(self, model, version, name, timeoutSec)

    def DallasWriteControl(self, ctrl):
        return _Amp1394Python.AmpIO_DallasWriteControl(self, ctrl)

    def DallasReadStatus(self, status):
        return _Amp1394Python.AmpIO_DallasReadStatus(self, status)

    def DallasWaitIdle(self):
        return _Amp1394Python.AmpIO_DallasWaitIdle(self)

    def DallasReadBlock(self, data, nbytes):
        return _Amp1394Python.AmpIO_DallasReadBlock(self, data, nbytes)

    def DallasReadMemory(self, addr, data, nbytes):
        return _Amp1394Python.AmpIO_DallasReadMemory(self, addr, data, nbytes)

    def WriteRobotLED(self, rgb1, rgb2, blink1=False, blink2=False):
        return _Amp1394Python.AmpIO_WriteRobotLED(self, rgb1, rgb2, blink1, blink2)

    def ReadRobotSerialNumber(self):
        return _Amp1394Python.AmpIO_ReadRobotSerialNumber(self)

    def ReadWaveformTable(self, buffer, offset, nquads):
        return _Amp1394Python.AmpIO_ReadWaveformTable(self, buffer, offset, nquads)

    def WriteWaveformTable(self, buffer, offset, nquads):
        return _Amp1394Python.AmpIO_WriteWaveformTable(self, buffer, offset, nquads)

    def DataCollectionStart(self, chan, collectCB=None):
        return _Amp1394Python.AmpIO_DataCollectionStart(self, chan, collectCB)

    def DataCollectionStop(self):
        return _Amp1394Python.AmpIO_DataCollectionStop(self)

    def IsCollecting(self):
        return _Amp1394Python.AmpIO_IsCollecting(self)

    def GetCollectionStatus(self, collecting, chan, writeAddr):
        return _Amp1394Python.AmpIO_GetCollectionStatus(self, collecting, chan, writeAddr)

    def ReadCollectionStatus(self, collecting, chan, writeAddr):
        return _Amp1394Python.AmpIO_ReadCollectionStatus(self, collecting, chan, writeAddr)

    def ReadCollectedData(self, buffer, offset, nquads):
        return _Amp1394Python.AmpIO_ReadCollectedData(self, buffer, offset, nquads)
    RESET = _Amp1394Python.AmpIO_RESET
    VOLTAGE = _Amp1394Python.AmpIO_VOLTAGE
    CURRENT = _Amp1394Python.AmpIO_CURRENT

    def ExplainSiFault(self):
        return _Amp1394Python.AmpIO_ExplainSiFault(self)

    def WriteSiCurrentLoopParams(self, index, params):
        return _Amp1394Python.AmpIO_WriteSiCurrentLoopParams(self, index, params)

    def ReadSiCurrentLoopParams(self, index, params):
        return _Amp1394Python.AmpIO_ReadSiCurrentLoopParams(self, index, params)

    def WriteMotorControlMode(self, index, val):
        return _Amp1394Python.AmpIO_WriteMotorControlMode(self, index, val)

    def WriteCurrentKpRaw(self, index, val):
        return _Amp1394Python.AmpIO_WriteCurrentKpRaw(self, index, val)

    def WriteCurrentKiRaw(self, index, val):
        return _Amp1394Python.AmpIO_WriteCurrentKiRaw(self, index, val)

    def WriteCurrentITermLimitRaw(self, index, val):
        return _Amp1394Python.AmpIO_WriteCurrentITermLimitRaw(self, index, val)

    def WriteDutyCycleLimit(self, index, val):
        return _Amp1394Python.AmpIO_WriteDutyCycleLimit(self, index, val)

    def ReadMotorControlMode(self, index):
        return _Amp1394Python.AmpIO_ReadMotorControlMode(self, index)

    def ReadCurrentKpRaw(self, index):
        return _Amp1394Python.AmpIO_ReadCurrentKpRaw(self, index)

    def ReadCurrentKiRaw(self, index):
        return _Amp1394Python.AmpIO_ReadCurrentKiRaw(self, index)

    def ReadCurrentITermLimitRaw(self, index):
        return _Amp1394Python.AmpIO_ReadCurrentITermLimitRaw(self, index)

    def ReadDutyCycleLimit(self, index):
        return _Amp1394Python.AmpIO_ReadDutyCycleLimit(self, index)

    def ReadDutyCycle(self, index):
        return _Amp1394Python.AmpIO_ReadDutyCycle(self, index)

    def ReadCurrentITerm(self, index):
        return _Amp1394Python.AmpIO_ReadCurrentITerm(self, index)

    def ReadFault(self, index):
        return _Amp1394Python.AmpIO_ReadFault(self, index)

# Register AmpIO in _Amp1394Python:
_Amp1394Python.AmpIO_swigregister(AmpIO)

def AmpIO_GetEncoderMidRange():
    return _Amp1394Python.AmpIO_GetEncoderMidRange()

def AmpIO_WritePowerEnableAll(port, state):
    return _Amp1394Python.AmpIO_WritePowerEnableAll(port, state)

def AmpIO_WriteSafetyRelayAll(port, state):
    return _Amp1394Python.AmpIO_WriteSafetyRelayAll(port, state)

def AmpIO_WriteEncoderPreloadAll(port, sdata):
    return _Amp1394Python.AmpIO_WriteEncoderPreloadAll(port, sdata)

ETH_UDP_DEFAULT_IP = _Amp1394Python.ETH_UDP_DEFAULT_IP
ETH_UDP_MULTICAST_DEFAULT_IP = _Amp1394Python.ETH_UDP_MULTICAST_DEFAULT_IP
class BasePort(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    MAX_NODES = _Amp1394Python.BasePort_MAX_NODES
    PORT_FIREWIRE = _Amp1394Python.BasePort_PORT_FIREWIRE
    PORT_ETH_UDP = _Amp1394Python.BasePort_PORT_ETH_UDP
    PORT_ETH_RAW = _Amp1394Python.BasePort_PORT_ETH_RAW
    PORT_ZYNQ_EMIO = _Amp1394Python.BasePort_PORT_ZYNQ_EMIO
    PROTOCOL_SEQ_RW = _Amp1394Python.BasePort_PROTOCOL_SEQ_RW
    PROTOCOL_SEQ_R_BC_W = _Amp1394Python.BasePort_PROTOCOL_SEQ_R_BC_W
    PROTOCOL_BC_QRW = _Amp1394Python.BasePort_PROTOCOL_BC_QRW
    __swig_destroy__ = _Amp1394Python.delete_BasePort

    def GetProtocol(self):
        return _Amp1394Python.BasePort_GetProtocol(self)

    def GetProtocolString(self):
        return _Amp1394Python.BasePort_GetProtocolString(self)

    @staticmethod
    def ProtocolString(protocol):
        return _Amp1394Python.BasePort_ProtocolString(protocol)

    @staticmethod
    def ParseProtocol(*args):
        return _Amp1394Python.BasePort_ParseProtocol(*args)

    def SetProtocol(self, prot):
        return _Amp1394Python.BasePort_SetProtocol(self, prot)

    def Reset(self):
        return _Amp1394Python.BasePort_Reset(self)

    def AddBoard(self, board):
        return _Amp1394Python.BasePort_AddBoard(self, board)

    def RemoveBoard(self, *args):
        return _Amp1394Python.BasePort_RemoveBoard(self, *args)

    def GetNumOfBoards(self):
        return _Amp1394Python.BasePort_GetNumOfBoards(self)

    def GetMaxBoardNum(self):
        return _Amp1394Python.BasePort_GetMaxBoardNum(self)

    def GetBoard(self, boardId):
        return _Amp1394Python.BasePort_GetBoard(self, boardId)

    def GetNumOfNodes(self):
        return _Amp1394Python.BasePort_GetNumOfNodes(self)

    def GetNodeId(self, boardId):
        return _Amp1394Python.BasePort_GetNodeId(self, boardId)

    def GetBoardId(self, nodeId):
        return _Amp1394Python.BasePort_GetBoardId(self, nodeId)

    def GetHubBoardId(self):
        return _Amp1394Python.BasePort_GetHubBoardId(self)

    def ConvertBoardToNode(self, boardId):
        return _Amp1394Python.BasePort_ConvertBoardToNode(self, boardId)

    def GetFirmwareVersion(self, boardId):
        return _Amp1394Python.BasePort_GetFirmwareVersion(self, boardId)

    def GetFpgaVersionMajor(self, boardId):
        return _Amp1394Python.BasePort_GetFpgaVersionMajor(self, boardId)

    def GetFpgaVersionMajorString(self, boardId):
        return _Amp1394Python.BasePort_GetFpgaVersionMajorString(self, boardId)

    def GetHardwareVersion(self, boardId):
        return _Amp1394Python.BasePort_GetHardwareVersion(self, boardId)

    def GetHardwareVersionString(self, boardId):
        return _Amp1394Python.BasePort_GetHardwareVersionString(self, boardId)

    @staticmethod
    def AddHardwareVersion(hver):
        return _Amp1394Python.BasePort_AddHardwareVersion(hver)

    @staticmethod
    def AddHardwareVersionString(hStr):
        return _Amp1394Python.BasePort_AddHardwareVersionString(hStr)

    @staticmethod
    def AddHardwareVersionStringList(hStr):
        return _Amp1394Python.BasePort_AddHardwareVersionStringList(hStr)

    @staticmethod
    def HardwareVersionValid(hver):
        return _Amp1394Python.BasePort_HardwareVersionValid(hver)

    def GetBroadcastReadInfo(self):
        return _Amp1394Python.BasePort_GetBroadcastReadInfo(self)

    def ClearBroadcastReadInfo(self):
        return _Amp1394Python.BasePort_ClearBroadcastReadInfo(self)

    @staticmethod
    def PortTypeString(portType):
        return _Amp1394Python.BasePort_PortTypeString(portType)

    @staticmethod
    def ParseOptions(*args):
        return _Amp1394Python.BasePort_ParseOptions(*args)

    @staticmethod
    def DefaultPortType():
        return _Amp1394Python.BasePort_DefaultPortType()

    @staticmethod
    def DefaultPort():
        return _Amp1394Python.BasePort_DefaultPort()

    def GetPortType(self):
        return _Amp1394Python.BasePort_GetPortType(self)

    def GetPortTypeString(self):
        return _Amp1394Python.BasePort_GetPortTypeString(self)

    def NumberOfUsers(self):
        return _Amp1394Python.BasePort_NumberOfUsers(self)

    def IsOK(self):
        return _Amp1394Python.BasePort_IsOK(self)

    def GetBusGeneration(self):
        return _Amp1394Python.BasePort_GetBusGeneration(self)

    def UpdateBusGeneration(self, gen):
        return _Amp1394Python.BasePort_UpdateBusGeneration(self, gen)
    WR_CTRL = _Amp1394Python.BasePort_WR_CTRL
    WR_FW_HEADER = _Amp1394Python.BasePort_WR_FW_HEADER
    WR_FW_BDATA = _Amp1394Python.BasePort_WR_FW_BDATA
    RD_FW_HEADER = _Amp1394Python.BasePort_RD_FW_HEADER
    RD_FW_BDATA = _Amp1394Python.BasePort_RD_FW_BDATA

    def GetPrefixOffset(self, msg):
        return _Amp1394Python.BasePort_GetPrefixOffset(self, msg)

    def GetWritePostfixSize(self):
        return _Amp1394Python.BasePort_GetWritePostfixSize(self)

    def GetReadPostfixSize(self):
        return _Amp1394Python.BasePort_GetReadPostfixSize(self)

    def GetWriteQuadAlign(self):
        return _Amp1394Python.BasePort_GetWriteQuadAlign(self)

    def GetReadQuadAlign(self):
        return _Amp1394Python.BasePort_GetReadQuadAlign(self)

    def GetMaxReadDataSize(self):
        return _Amp1394Python.BasePort_GetMaxReadDataSize(self)

    def GetMaxWriteDataSize(self):
        return _Amp1394Python.BasePort_GetMaxWriteDataSize(self)

    def CheckFwBusGeneration(self, caller, doScan=False):
        return _Amp1394Python.BasePort_CheckFwBusGeneration(self, caller, doScan)

    def ReScanNodes(self, caller):
        return _Amp1394Python.BasePort_ReScanNodes(self, caller)

    def GetAutoReScan(self):
        return _Amp1394Python.BasePort_GetAutoReScan(self)

    def SetAutoReScan(self, newValue):
        return _Amp1394Python.BasePort_SetAutoReScan(self, newValue)

    def ReadAllBoards(self):
        return _Amp1394Python.BasePort_ReadAllBoards(self)

    def ReadAllBoardsBroadcast(self):
        return _Amp1394Python.BasePort_ReadAllBoardsBroadcast(self)

    def isBroadcastReadOrdered(self):
        return _Amp1394Python.BasePort_isBroadcastReadOrdered(self)

    def GetBroadcastReadClockPeriod(self):
        return _Amp1394Python.BasePort_GetBroadcastReadClockPeriod(self)

    def WriteAllBoards(self):
        return _Amp1394Python.BasePort_WriteAllBoards(self)

    def WriteAllBoardsBroadcast(self):
        return _Amp1394Python.BasePort_WriteAllBoardsBroadcast(self)

    def ReadQuadlet(self, boardId, addr):
        return _Amp1394Python.BasePort_ReadQuadlet(self, boardId, addr)

    def WriteQuadlet(self, boardId, addr, data):
        return _Amp1394Python.BasePort_WriteQuadlet(self, boardId, addr, data)

    def WriteNoOp(self, boardId):
        return _Amp1394Python.BasePort_WriteNoOp(self, boardId)

    def ReadBlock(self, boardId, addr, rdata):
        return _Amp1394Python.BasePort_ReadBlock(self, boardId, addr, rdata)

    def WriteBlock(self, boardId, addr, wdata):
        return _Amp1394Python.BasePort_WriteBlock(self, boardId, addr, wdata)

    def WriteBroadcastOutput(self, buffer, size):
        return _Amp1394Python.BasePort_WriteBroadcastOutput(self, buffer, size)

    def WriteBroadcastReadRequest(self, seq):
        return _Amp1394Python.BasePort_WriteBroadcastReadRequest(self, seq)

    def WaitBroadcastRead(self):
        return _Amp1394Python.BasePort_WaitBroadcastRead(self)

    def ReceiveBroadcastReadResponse(self, rdata):
        return _Amp1394Python.BasePort_ReceiveBroadcastReadResponse(self, rdata)

    def PromDelay(self):
        return _Amp1394Python.BasePort_PromDelay(self)

# Register BasePort in _Amp1394Python:
_Amp1394Python.BasePort_swigregister(BasePort)
cvar = _Amp1394Python.cvar
BOARD_ID_MASK = cvar.BOARD_ID_MASK
QLA1_String = cvar.QLA1_String
dRA1_String = cvar.dRA1_String
DQLA_String = cvar.DQLA_String
BCFG_String = cvar.BCFG_String
MAX_POSSIBLE_DATA_SIZE = cvar.MAX_POSSIBLE_DATA_SIZE
FW_NODE_ETH_BROADCAST_MASK = cvar.FW_NODE_ETH_BROADCAST_MASK
FW_NODE_NOFORWARD_MASK = cvar.FW_NODE_NOFORWARD_MASK
FW_NODE_FLAGS_MASK = cvar.FW_NODE_FLAGS_MASK
FW_NODE_MASK = cvar.FW_NODE_MASK
FW_NODE_BROADCAST = cvar.FW_NODE_BROADCAST
FW_TL_MASK = cvar.FW_TL_MASK

def BasePort_ProtocolString(protocol):
    return _Amp1394Python.BasePort_ProtocolString(protocol)

def BasePort_ParseProtocol(*args):
    return _Amp1394Python.BasePort_ParseProtocol(*args)

def BasePort_AddHardwareVersion(hver):
    return _Amp1394Python.BasePort_AddHardwareVersion(hver)

def BasePort_AddHardwareVersionString(hStr):
    return _Amp1394Python.BasePort_AddHardwareVersionString(hStr)

def BasePort_AddHardwareVersionStringList(hStr):
    return _Amp1394Python.BasePort_AddHardwareVersionStringList(hStr)

def BasePort_HardwareVersionValid(hver):
    return _Amp1394Python.BasePort_HardwareVersionValid(hver)

def BasePort_PortTypeString(portType):
    return _Amp1394Python.BasePort_PortTypeString(portType)

def BasePort_ParseOptions(*args):
    return _Amp1394Python.BasePort_ParseOptions(*args)

def BasePort_DefaultPortType():
    return _Amp1394Python.BasePort_DefaultPortType()

def BasePort_DefaultPort():
    return _Amp1394Python.BasePort_DefaultPort()

class EthBasePort(BasePort):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    QWRITE = _Amp1394Python.EthBasePort_QWRITE
    BWRITE = _Amp1394Python.EthBasePort_BWRITE
    QREAD = _Amp1394Python.EthBasePort_QREAD
    BREAD = _Amp1394Python.EthBasePort_BREAD
    QRESPONSE = _Amp1394Python.EthBasePort_QRESPONSE
    BRESPONSE = _Amp1394Python.EthBasePort_BRESPONSE
    __swig_destroy__ = _Amp1394Python.delete_EthBasePort

    def SetEthCallback(self, callback):
        return _Amp1394Python.EthBasePort_SetEthCallback(self, callback)

    def GetReceiveTimeout(self):
        return _Amp1394Python.EthBasePort_GetReceiveTimeout(self)

    def SetReceiveTimeout(self, timeSec):
        return _Amp1394Python.EthBasePort_SetReceiveTimeout(self, timeSec)

    def GetFpgaStatus(self, status):
        return _Amp1394Python.EthBasePort_GetFpgaStatus(self, status)

    def GetFpgaReceiveTime(self):
        return _Amp1394Python.EthBasePort_GetFpgaReceiveTime(self)

    def GetFpgaTotalTime(self):
        return _Amp1394Python.EthBasePort_GetFpgaTotalTime(self)

    def NumberOfUsers(self):
        return _Amp1394Python.EthBasePort_NumberOfUsers(self)

    def GetBusGeneration(self):
        return _Amp1394Python.EthBasePort_GetBusGeneration(self)

    def UpdateBusGeneration(self, gen):
        return _Amp1394Python.EthBasePort_UpdateBusGeneration(self, gen)

    def CheckFwBusGeneration(self, caller, doScan=False):
        return _Amp1394Python.EthBasePort_CheckFwBusGeneration(self, caller, doScan)

    def WriteBroadcastOutput(self, buffer, size):
        return _Amp1394Python.EthBasePort_WriteBroadcastOutput(self, buffer, size)

    def WriteBroadcastReadRequest(self, seq):
        return _Amp1394Python.EthBasePort_WriteBroadcastReadRequest(self, seq)

    def WaitBroadcastRead(self):
        return _Amp1394Python.EthBasePort_WaitBroadcastRead(self)

    def isBroadcastReadOrdered(self):
        return _Amp1394Python.EthBasePort_isBroadcastReadOrdered(self)

    def GetBroadcastReadClockPeriod(self):
        return _Amp1394Python.EthBasePort_GetBroadcastReadClockPeriod(self)

    def ReceiveBroadcastReadResponse(self, rdata):
        return _Amp1394Python.EthBasePort_ReceiveBroadcastReadResponse(self, rdata)

    def PromDelay(self):
        return _Amp1394Python.EthBasePort_PromDelay(self)

    @staticmethod
    def BitReverse32(input):
        return _Amp1394Python.EthBasePort_BitReverse32(input)

    @staticmethod
    def GetDestMacAddr(macAddr):
        return _Amp1394Python.EthBasePort_GetDestMacAddr(macAddr)

    @staticmethod
    def GetDestMulticastMacAddr(macAddr):
        return _Amp1394Python.EthBasePort_GetDestMulticastMacAddr(macAddr)

    @staticmethod
    def PrintMAC(outStr, name, addr, swap16=False):
        return _Amp1394Python.EthBasePort_PrintMAC(outStr, name, addr, swap16)

    @staticmethod
    def PrintIP(outStr, name, addr, swap16=False):
        return _Amp1394Python.EthBasePort_PrintIP(outStr, name, addr, swap16)

    def CheckEthernetHeader(self, packet, useEthernetBroadcast):
        return _Amp1394Python.EthBasePort_CheckEthernetHeader(self, packet, useEthernetBroadcast)

    def ByteswapQuadlets(self, packet, nbytes):
        return _Amp1394Python.EthBasePort_ByteswapQuadlets(self, packet, nbytes)

    @staticmethod
    def GetFirewireHeaderInfo(packet, src_node, tcode, tl):
        return _Amp1394Python.EthBasePort_GetFirewireHeaderInfo(packet, src_node, tcode, tl)

    def CheckFirewirePacket(self, packet, length, node, tcode, tl):
        return _Amp1394Python.EthBasePort_CheckFirewirePacket(self, packet, length, node, tcode, tl)

    def ProcessExtraData(self, packet):
        return _Amp1394Python.EthBasePort_ProcessExtraData(self, packet)

    @staticmethod
    def checkCRC(packet):
        return _Amp1394Python.EthBasePort_checkCRC(packet)

    @staticmethod
    def PrintFirewirePacket(out, packet, max_quads):
        return _Amp1394Python.EthBasePort_PrintFirewirePacket(out, packet, max_quads)

    @staticmethod
    def PrintEthernetPacket(out, packet, max_quads):
        return _Amp1394Python.EthBasePort_PrintEthernetPacket(out, packet, max_quads)

    @staticmethod
    def PrintStatus(debugStream, status):
        return _Amp1394Python.EthBasePort_PrintStatus(debugStream, status)

    @staticmethod
    def CheckDebugHeader(debugStream, caller, header, version):
        return _Amp1394Python.EthBasePort_CheckDebugHeader(debugStream, caller, header, version)

    @staticmethod
    def PrintDebugData(debugStream, data, clockPeriod):
        return _Amp1394Python.EthBasePort_PrintDebugData(debugStream, data, clockPeriod)

    @staticmethod
    def PrintDebugDataKSZ(debugStream, data, clockPeriod):
        return _Amp1394Python.EthBasePort_PrintDebugDataKSZ(debugStream, data, clockPeriod)

    @staticmethod
    def PrintDebugDataRTL(debugStream, data, portName):
        return _Amp1394Python.EthBasePort_PrintDebugDataRTL(debugStream, data, portName)

    @staticmethod
    def PrintDebugDataRTI(debugStream, data, clockPeriod):
        return _Amp1394Python.EthBasePort_PrintDebugDataRTI(debugStream, data, clockPeriod)

# Register EthBasePort in _Amp1394Python:
_Amp1394Python.EthBasePort_swigregister(EthBasePort)
FW_QREAD_SIZE = cvar.FW_QREAD_SIZE
FW_QWRITE_SIZE = cvar.FW_QWRITE_SIZE
FW_QRESPONSE_SIZE = cvar.FW_QRESPONSE_SIZE
FW_BREAD_SIZE = cvar.FW_BREAD_SIZE
FW_BRESPONSE_HEADER_SIZE = cvar.FW_BRESPONSE_HEADER_SIZE
FW_BWRITE_HEADER_SIZE = cvar.FW_BWRITE_HEADER_SIZE
FW_CRC_SIZE = cvar.FW_CRC_SIZE
FW_CTRL_SIZE = cvar.FW_CTRL_SIZE
FW_EXTRA_SIZE = cvar.FW_EXTRA_SIZE
FW_CTRL_NOFORWARD = cvar.FW_CTRL_NOFORWARD

def EthBasePort_BitReverse32(input):
    return _Amp1394Python.EthBasePort_BitReverse32(input)

def EthBasePort_GetDestMacAddr(macAddr):
    return _Amp1394Python.EthBasePort_GetDestMacAddr(macAddr)

def EthBasePort_GetDestMulticastMacAddr(macAddr):
    return _Amp1394Python.EthBasePort_GetDestMulticastMacAddr(macAddr)

def EthBasePort_PrintMAC(outStr, name, addr, swap16=False):
    return _Amp1394Python.EthBasePort_PrintMAC(outStr, name, addr, swap16)

def EthBasePort_PrintIP(outStr, name, addr, swap16=False):
    return _Amp1394Python.EthBasePort_PrintIP(outStr, name, addr, swap16)

def EthBasePort_GetFirewireHeaderInfo(packet, src_node, tcode, tl):
    return _Amp1394Python.EthBasePort_GetFirewireHeaderInfo(packet, src_node, tcode, tl)

def EthBasePort_checkCRC(packet):
    return _Amp1394Python.EthBasePort_checkCRC(packet)

def EthBasePort_PrintFirewirePacket(out, packet, max_quads):
    return _Amp1394Python.EthBasePort_PrintFirewirePacket(out, packet, max_quads)

def EthBasePort_PrintEthernetPacket(out, packet, max_quads):
    return _Amp1394Python.EthBasePort_PrintEthernetPacket(out, packet, max_quads)

def EthBasePort_PrintStatus(debugStream, status):
    return _Amp1394Python.EthBasePort_PrintStatus(debugStream, status)

def EthBasePort_CheckDebugHeader(debugStream, caller, header, version):
    return _Amp1394Python.EthBasePort_CheckDebugHeader(debugStream, caller, header, version)

def EthBasePort_PrintDebugData(debugStream, data, clockPeriod):
    return _Amp1394Python.EthBasePort_PrintDebugData(debugStream, data, clockPeriod)

def EthBasePort_PrintDebugDataKSZ(debugStream, data, clockPeriod):
    return _Amp1394Python.EthBasePort_PrintDebugDataKSZ(debugStream, data, clockPeriod)

def EthBasePort_PrintDebugDataRTL(debugStream, data, portName):
    return _Amp1394Python.EthBasePort_PrintDebugDataRTL(debugStream, data, portName)

def EthBasePort_PrintDebugDataRTI(debugStream, data, clockPeriod):
    return _Amp1394Python.EthBasePort_PrintDebugDataRTI(debugStream, data, clockPeriod)

class EthUdpPort(EthBasePort):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Amp1394Python.EthUdpPort_swiginit(self, _Amp1394Python.new_EthUdpPort(*args))
    __swig_destroy__ = _Amp1394Python.delete_EthUdpPort

    def GetMultiCastIP(self):
        return _Amp1394Python.EthUdpPort_GetMultiCastIP(self)

    def SetMulticastIP(self, multicast):
        return _Amp1394Python.EthUdpPort_SetMulticastIP(self, multicast)

    def GetPortType(self):
        return _Amp1394Python.EthUdpPort_GetPortType(self)

    def IsOK(self):
        return _Amp1394Python.EthUdpPort_IsOK(self)

    def GetPrefixOffset(self, msg):
        return _Amp1394Python.EthUdpPort_GetPrefixOffset(self, msg)

    def GetWritePostfixSize(self):
        return _Amp1394Python.EthUdpPort_GetWritePostfixSize(self)

    def GetReadPostfixSize(self):
        return _Amp1394Python.EthUdpPort_GetReadPostfixSize(self)

    def GetWriteQuadAlign(self):
        return _Amp1394Python.EthUdpPort_GetWriteQuadAlign(self)

    def GetReadQuadAlign(self):
        return _Amp1394Python.EthUdpPort_GetReadQuadAlign(self)

    def GetMaxReadDataSize(self):
        return _Amp1394Python.EthUdpPort_GetMaxReadDataSize(self)

    def GetMaxWriteDataSize(self):
        return _Amp1394Python.EthUdpPort_GetMaxWriteDataSize(self)

    @staticmethod
    def IP_String(IPaddr):
        return _Amp1394Python.EthUdpPort_IP_String(IPaddr)

    @staticmethod
    def IP_ULong(IPaddr):
        return _Amp1394Python.EthUdpPort_IP_ULong(IPaddr)

# Register EthUdpPort in _Amp1394Python:
_Amp1394Python.EthUdpPort_swigregister(EthUdpPort)
ETH_MTU_DEFAULT = cvar.ETH_MTU_DEFAULT
ETH_UDP_HEADER = cvar.ETH_UDP_HEADER

def EthUdpPort_IP_String(IPaddr):
    return _Amp1394Python.EthUdpPort_IP_String(IPaddr)

def EthUdpPort_IP_ULong(IPaddr):
    return _Amp1394Python.EthUdpPort_IP_ULong(IPaddr)

class FirewirePort(BasePort):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Amp1394Python.FirewirePort_swiginit(self, _Amp1394Python.new_FirewirePort(*args))
    __swig_destroy__ = _Amp1394Python.delete_FirewirePort

    def GetPortType(self):
        return _Amp1394Python.FirewirePort_GetPortType(self)

    def NumberOfUsers(self):
        return _Amp1394Python.FirewirePort_NumberOfUsers(self)

    def IsOK(self):
        return _Amp1394Python.FirewirePort_IsOK(self)

    def GetBusGeneration(self):
        return _Amp1394Python.FirewirePort_GetBusGeneration(self)

    def UpdateBusGeneration(self, gen):
        return _Amp1394Python.FirewirePort_UpdateBusGeneration(self, gen)

    def GetPrefixOffset(self, arg2):
        return _Amp1394Python.FirewirePort_GetPrefixOffset(self, arg2)

    def GetWritePostfixSize(self):
        return _Amp1394Python.FirewirePort_GetWritePostfixSize(self)

    def GetReadPrefixSize(self):
        return _Amp1394Python.FirewirePort_GetReadPrefixSize(self)

    def GetReadPostfixSize(self):
        return _Amp1394Python.FirewirePort_GetReadPostfixSize(self)

    def GetWriteQuadAlign(self):
        return _Amp1394Python.FirewirePort_GetWriteQuadAlign(self)

    def GetReadQuadAlign(self):
        return _Amp1394Python.FirewirePort_GetReadQuadAlign(self)

    def GetMaxReadDataSize(self):
        return _Amp1394Python.FirewirePort_GetMaxReadDataSize(self)

    def GetMaxWriteDataSize(self):
        return _Amp1394Python.FirewirePort_GetMaxWriteDataSize(self)

    def AddBoard(self, board):
        return _Amp1394Python.FirewirePort_AddBoard(self, board)

    def RemoveBoard(self, boardId):
        return _Amp1394Python.FirewirePort_RemoveBoard(self, boardId)

    def WriteBroadcastReadRequest(self, seq):
        return _Amp1394Python.FirewirePort_WriteBroadcastReadRequest(self, seq)

    def WaitBroadcastRead(self):
        return _Amp1394Python.FirewirePort_WaitBroadcastRead(self)

    def PromDelay(self):
        return _Amp1394Python.FirewirePort_PromDelay(self)

    def StopCycleStartPacket(self):
        return _Amp1394Python.FirewirePort_StopCycleStartPacket(self)

# Register FirewirePort in _Amp1394Python:
_Amp1394Python.FirewirePort_swigregister(FirewirePort)
FW_MAX_PACKET_SIZE = cvar.FW_MAX_PACKET_SIZE
FW_MAX_DATA_SIZE = cvar.FW_MAX_DATA_SIZE


def PortFactory(*args):
    return _Amp1394Python.PortFactory(*args)


